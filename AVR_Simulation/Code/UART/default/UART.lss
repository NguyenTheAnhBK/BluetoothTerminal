
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000e3a  00000ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800076  00800076  00000ee4  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000208  00000000  00000000  00001044  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e64  00000000  00000000  0000124c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001023  00000000  00000000  000030b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000100f  00000000  00000000  000040d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  000050e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000383  00000000  00000000  000052c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00005647  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00005e15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e3       	ldi	r30, 0x3A	; 58
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <main>
  8a:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_Init>:
#include<avr/interrupt.h>

volatile unsigned char _data;

// Initial
void USART_Init(unsigned int baud){
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	00 d0       	rcall	.+0      	; 0x98 <USART_Init+0x6>
  98:	cd b7       	in	r28, 0x3d	; 61
  9a:	de b7       	in	r29, 0x3e	; 62
  9c:	9a 83       	std	Y+2, r25	; 0x02
  9e:	89 83       	std	Y+1, r24	; 0x01
	// Set baud rate with USART Baud Rate Register
	// Voi U2X = 0
	UBRRH = (unsigned char) (baud >> 8);
  a0:	e0 e4       	ldi	r30, 0x40	; 64
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	89 81       	ldd	r24, Y+1	; 0x01
  a6:	9a 81       	ldd	r25, Y+2	; 0x02
  a8:	89 2f       	mov	r24, r25
  aa:	99 27       	eor	r25, r25
  ac:	80 83       	st	Z, r24
	UBRRL = (unsigned char) baud;
  ae:	e9 e2       	ldi	r30, 0x29	; 41
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	89 81       	ldd	r24, Y+1	; 0x01
  b4:	80 83       	st	Z, r24
	
	// Enable receiver and transmitter (USART Control and Status Register B)
	UCSRB = (1 << RXEN) | (1 << TXEN);
  b6:	ea e2       	ldi	r30, 0x2A	; 42
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	88 e1       	ldi	r24, 0x18	; 24
  bc:	80 83       	st	Z, r24
	//UCSRB |= (1 << RXCIE);

	// Set frame format: 8 (data), no parity (USART Parity Mode = 0), 1 stop (USBS = 0)
	// Chon thanh ghi USCRC voi USART Register Select 
	// Chon charecter size voi USART Character Size (UCSZ0 -> UCSZ2)
	UCSRC = (1 << URSEL) | (1 << UCSZ1) | (1 << UCSZ0);
  be:	e0 e4       	ldi	r30, 0x40	; 64
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	86 e8       	ldi	r24, 0x86	; 134
  c4:	80 83       	st	Z, r24

	//sei(); // set bit I cho phep ngat toan cuc
}
  c6:	0f 90       	pop	r0
  c8:	0f 90       	pop	r0
  ca:	cf 91       	pop	r28
  cc:	df 91       	pop	r29
  ce:	08 95       	ret

000000d0 <USART_Transmit>:


// Transmitter (ATmega co buffer 3 bytes cho TX
void USART_Transmit(unsigned char c){
  d0:	df 93       	push	r29
  d2:	cf 93       	push	r28
  d4:	0f 92       	push	r0
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	89 83       	std	Y+1, r24	; 0x01
	// UART Data Register Empty = 1 thi bat dau truyen (nhan) du lieu
	while(!(UCSRA & (1 << UDRE))){}; 
  dc:	eb e2       	ldi	r30, 0x2B	; 43
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	88 2f       	mov	r24, r24
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	80 72       	andi	r24, 0x20	; 32
  e8:	90 70       	andi	r25, 0x00	; 0
  ea:	00 97       	sbiw	r24, 0x00	; 0
  ec:	b9 f3       	breq	.-18     	; 0xdc <USART_Transmit+0xc>
	UDR = c; // UART Data Register
  ee:	ec e2       	ldi	r30, 0x2C	; 44
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	80 83       	st	Z, r24
}
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	08 95       	ret

000000fe <USART_Transmit_String>:

void USART_Transmit_String(char* data){
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	00 d0       	rcall	.+0      	; 0x104 <USART_Transmit_String+0x6>
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62
 108:	9a 83       	std	Y+2, r25	; 0x02
 10a:	89 83       	std	Y+1, r24	; 0x01
 10c:	0a c0       	rjmp	.+20     	; 0x122 <USART_Transmit_String+0x24>
	while(*data != 0x00){
		USART_Transmit(*data);
 10e:	e9 81       	ldd	r30, Y+1	; 0x01
 110:	fa 81       	ldd	r31, Y+2	; 0x02
 112:	80 81       	ld	r24, Z
 114:	0e 94 68 00 	call	0xd0	; 0xd0 <USART_Transmit>
		data++;
 118:	89 81       	ldd	r24, Y+1	; 0x01
 11a:	9a 81       	ldd	r25, Y+2	; 0x02
 11c:	01 96       	adiw	r24, 0x01	; 1
 11e:	9a 83       	std	Y+2, r25	; 0x02
 120:	89 83       	std	Y+1, r24	; 0x01
	while(!(UCSRA & (1 << UDRE))){}; 
	UDR = c; // UART Data Register
}

void USART_Transmit_String(char* data){
	while(*data != 0x00){
 122:	e9 81       	ldd	r30, Y+1	; 0x01
 124:	fa 81       	ldd	r31, Y+2	; 0x02
 126:	80 81       	ld	r24, Z
 128:	88 23       	and	r24, r24
 12a:	89 f7       	brne	.-30     	; 0x10e <USART_Transmit_String+0x10>
		USART_Transmit(*data);
		data++;
	}		
}
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	cf 91       	pop	r28
 132:	df 91       	pop	r29
 134:	08 95       	ret

00000136 <USART_Receive>:

// Receiver
unsigned char USART_Receive(){
 136:	df 93       	push	r29
 138:	cf 93       	push	r28
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
	while(!(UCSRA & (1 << RXC))){};
 13e:	eb e2       	ldi	r30, 0x2B	; 43
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	88 23       	and	r24, r24
 146:	dc f7       	brge	.-10     	; 0x13e <USART_Receive+0x8>
	// Get and return received data from buffer
	return UDR;
 148:	ec e2       	ldi	r30, 0x2C	; 44
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
}
 14e:	cf 91       	pop	r28
 150:	df 91       	pop	r29
 152:	08 95       	ret

00000154 <USART_Address_TX>:

void USART_Address_TX(unsigned char c){
 154:	df 93       	push	r29
 156:	cf 93       	push	r28
 158:	0f 92       	push	r0
 15a:	cd b7       	in	r28, 0x3d	; 61
 15c:	de b7       	in	r29, 0x3e	; 62
 15e:	89 83       	std	Y+1, r24	; 0x01
	while(!(UCSRA & (1 << UDRE)));
 160:	eb e2       	ldi	r30, 0x2B	; 43
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	88 2f       	mov	r24, r24
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	80 72       	andi	r24, 0x20	; 32
 16c:	90 70       	andi	r25, 0x00	; 0
 16e:	00 97       	sbiw	r24, 0x00	; 0
 170:	b9 f3       	breq	.-18     	; 0x160 <USART_Address_TX+0xc>
	UCSRB |= (1 << TXB8);
 172:	aa e2       	ldi	r26, 0x2A	; 42
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	ea e2       	ldi	r30, 0x2A	; 42
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	80 81       	ld	r24, Z
 17c:	81 60       	ori	r24, 0x01	; 1
 17e:	8c 93       	st	X, r24
	UDR = c;
 180:	ec e2       	ldi	r30, 0x2C	; 44
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	80 83       	st	Z, r24
}
 188:	0f 90       	pop	r0
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <__vector_11>:

// Trinh phuc vu ngat USART hoan tat nhan
ISR(SIG_UART_RECV){
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	2f 93       	push	r18
 19c:	3f 93       	push	r19
 19e:	4f 93       	push	r20
 1a0:	5f 93       	push	r21
 1a2:	6f 93       	push	r22
 1a4:	7f 93       	push	r23
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
 1aa:	af 93       	push	r26
 1ac:	bf 93       	push	r27
 1ae:	ef 93       	push	r30
 1b0:	ff 93       	push	r31
 1b2:	df 93       	push	r29
 1b4:	cf 93       	push	r28
 1b6:	cd b7       	in	r28, 0x3d	; 61
 1b8:	de b7       	in	r29, 0x3e	; 62
	_data = UDR;
 1ba:	ec e2       	ldi	r30, 0x2C	; 44
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	80 93 76 00 	sts	0x0076, r24
	USART_Transmit(_data);
 1c4:	80 91 76 00 	lds	r24, 0x0076
 1c8:	0e 94 68 00 	call	0xd0	; 0xd0 <USART_Transmit>
}
 1cc:	cf 91       	pop	r28
 1ce:	df 91       	pop	r29
 1d0:	ff 91       	pop	r31
 1d2:	ef 91       	pop	r30
 1d4:	bf 91       	pop	r27
 1d6:	af 91       	pop	r26
 1d8:	9f 91       	pop	r25
 1da:	8f 91       	pop	r24
 1dc:	7f 91       	pop	r23
 1de:	6f 91       	pop	r22
 1e0:	5f 91       	pop	r21
 1e2:	4f 91       	pop	r20
 1e4:	3f 91       	pop	r19
 1e6:	2f 91       	pop	r18
 1e8:	0f 90       	pop	r0
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	0f 90       	pop	r0
 1ee:	1f 90       	pop	r1
 1f0:	18 95       	reti

000001f2 <main>:
#include<util/delay.h>

#include "KSC_UART.h"


int main(){
 1f2:	df 93       	push	r29
 1f4:	cf 93       	push	r28
 1f6:	cd b7       	in	r28, 0x3d	; 61
 1f8:	de b7       	in	r29, 0x3e	; 62
 1fa:	2f 97       	sbiw	r28, 0x0f	; 15
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
	// Baud rate = 57600 bps (f = 8MHz) -> UBRRL = 8
	USART_Init(8);
 206:	88 e0       	ldi	r24, 0x08	; 8
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0e 94 49 00 	call	0x92	; 0x92 <USART_Init>

	USART_Transmit_String("Hello World\r\n");
 20e:	80 e6       	ldi	r24, 0x60	; 96
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 7f 00 	call	0xfe	; 0xfe <USART_Transmit_String>
		//	_delay_ms(100);
		//}

		//USART_Transmit(USART_Receive);
		//_delay_ms(100);
		unsigned char data = USART_Receive();
 216:	0e 94 9b 00 	call	0x136	; 0x136 <USART_Receive>
 21a:	8f 87       	std	Y+15, r24	; 0x0f
		//_delay_ms(10);
		USART_Transmit(data);
 21c:	8f 85       	ldd	r24, Y+15	; 0x0f
 21e:	0e 94 68 00 	call	0xd0	; 0xd0 <USART_Transmit>
		USART_Transmit('\r');
 222:	8d e0       	ldi	r24, 0x0D	; 13
 224:	0e 94 68 00 	call	0xd0	; 0xd0 <USART_Transmit>
		USART_Transmit('\n');
 228:	8a e0       	ldi	r24, 0x0A	; 10
 22a:	0e 94 68 00 	call	0xd0	; 0xd0 <USART_Transmit>
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	a0 e2       	ldi	r26, 0x20	; 32
 234:	b1 e4       	ldi	r27, 0x41	; 65
 236:	8b 87       	std	Y+11, r24	; 0x0b
 238:	9c 87       	std	Y+12, r25	; 0x0c
 23a:	ad 87       	std	Y+13, r26	; 0x0d
 23c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 23e:	6b 85       	ldd	r22, Y+11	; 0x0b
 240:	7c 85       	ldd	r23, Y+12	; 0x0c
 242:	8d 85       	ldd	r24, Y+13	; 0x0d
 244:	9e 85       	ldd	r25, Y+14	; 0x0e
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	4a ef       	ldi	r20, 0xFA	; 250
 24c:	54 e4       	ldi	r21, 0x44	; 68
 24e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__mulsf3>
 252:	dc 01       	movw	r26, r24
 254:	cb 01       	movw	r24, r22
 256:	8f 83       	std	Y+7, r24	; 0x07
 258:	98 87       	std	Y+8, r25	; 0x08
 25a:	a9 87       	std	Y+9, r26	; 0x09
 25c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 25e:	6f 81       	ldd	r22, Y+7	; 0x07
 260:	78 85       	ldd	r23, Y+8	; 0x08
 262:	89 85       	ldd	r24, Y+9	; 0x09
 264:	9a 85       	ldd	r25, Y+10	; 0x0a
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	40 e8       	ldi	r20, 0x80	; 128
 26c:	5f e3       	ldi	r21, 0x3F	; 63
 26e:	0e 94 ba 04 	call	0x974	; 0x974 <__ltsf2>
 272:	88 23       	and	r24, r24
 274:	2c f4       	brge	.+10     	; 0x280 <main+0x8e>
		__ticks = 1;
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	9e 83       	std	Y+6, r25	; 0x06
 27c:	8d 83       	std	Y+5, r24	; 0x05
 27e:	3f c0       	rjmp	.+126    	; 0x2fe <main+0x10c>
	else if (__tmp > 65535)
 280:	6f 81       	ldd	r22, Y+7	; 0x07
 282:	78 85       	ldd	r23, Y+8	; 0x08
 284:	89 85       	ldd	r24, Y+9	; 0x09
 286:	9a 85       	ldd	r25, Y+10	; 0x0a
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	3f ef       	ldi	r19, 0xFF	; 255
 28c:	4f e7       	ldi	r20, 0x7F	; 127
 28e:	57 e4       	ldi	r21, 0x47	; 71
 290:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__gtsf2>
 294:	18 16       	cp	r1, r24
 296:	4c f5       	brge	.+82     	; 0x2ea <main+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 298:	6b 85       	ldd	r22, Y+11	; 0x0b
 29a:	7c 85       	ldd	r23, Y+12	; 0x0c
 29c:	8d 85       	ldd	r24, Y+13	; 0x0d
 29e:	9e 85       	ldd	r25, Y+14	; 0x0e
 2a0:	20 e0       	ldi	r18, 0x00	; 0
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	40 e2       	ldi	r20, 0x20	; 32
 2a6:	51 e4       	ldi	r21, 0x41	; 65
 2a8:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__mulsf3>
 2ac:	dc 01       	movw	r26, r24
 2ae:	cb 01       	movw	r24, r22
 2b0:	bc 01       	movw	r22, r24
 2b2:	cd 01       	movw	r24, r26
 2b4:	0e 94 8a 01 	call	0x314	; 0x314 <__fixunssfsi>
 2b8:	dc 01       	movw	r26, r24
 2ba:	cb 01       	movw	r24, r22
 2bc:	9e 83       	std	Y+6, r25	; 0x06
 2be:	8d 83       	std	Y+5, r24	; 0x05
 2c0:	0f c0       	rjmp	.+30     	; 0x2e0 <main+0xee>
 2c2:	88 ec       	ldi	r24, 0xC8	; 200
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	9c 83       	std	Y+4, r25	; 0x04
 2c8:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 2ca:	8b 81       	ldd	r24, Y+3	; 0x03
 2cc:	9c 81       	ldd	r25, Y+4	; 0x04
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <main+0xdc>
 2d2:	9c 83       	std	Y+4, r25	; 0x04
 2d4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2d6:	8d 81       	ldd	r24, Y+5	; 0x05
 2d8:	9e 81       	ldd	r25, Y+6	; 0x06
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	9e 83       	std	Y+6, r25	; 0x06
 2de:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2e0:	8d 81       	ldd	r24, Y+5	; 0x05
 2e2:	9e 81       	ldd	r25, Y+6	; 0x06
 2e4:	00 97       	sbiw	r24, 0x00	; 0
 2e6:	69 f7       	brne	.-38     	; 0x2c2 <main+0xd0>
 2e8:	96 cf       	rjmp	.-212    	; 0x216 <main+0x24>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2ea:	6f 81       	ldd	r22, Y+7	; 0x07
 2ec:	78 85       	ldd	r23, Y+8	; 0x08
 2ee:	89 85       	ldd	r24, Y+9	; 0x09
 2f0:	9a 85       	ldd	r25, Y+10	; 0x0a
 2f2:	0e 94 8a 01 	call	0x314	; 0x314 <__fixunssfsi>
 2f6:	dc 01       	movw	r26, r24
 2f8:	cb 01       	movw	r24, r22
 2fa:	9e 83       	std	Y+6, r25	; 0x06
 2fc:	8d 83       	std	Y+5, r24	; 0x05
 2fe:	8d 81       	ldd	r24, Y+5	; 0x05
 300:	9e 81       	ldd	r25, Y+6	; 0x06
 302:	9a 83       	std	Y+2, r25	; 0x02
 304:	89 83       	std	Y+1, r24	; 0x01
 306:	89 81       	ldd	r24, Y+1	; 0x01
 308:	9a 81       	ldd	r25, Y+2	; 0x02
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <main+0x118>
 30e:	9a 83       	std	Y+2, r25	; 0x02
 310:	89 83       	std	Y+1, r24	; 0x01
 312:	81 cf       	rjmp	.-254    	; 0x216 <main+0x24>

00000314 <__fixunssfsi>:
 314:	ef 92       	push	r14
 316:	ff 92       	push	r15
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	7b 01       	movw	r14, r22
 31e:	8c 01       	movw	r16, r24
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	5f e4       	ldi	r21, 0x4F	; 79
 328:	0e 94 8a 04 	call	0x914	; 0x914 <__gesf2>
 32c:	88 23       	and	r24, r24
 32e:	8c f0       	brlt	.+34     	; 0x352 <__fixunssfsi+0x3e>
 330:	c8 01       	movw	r24, r16
 332:	b7 01       	movw	r22, r14
 334:	20 e0       	ldi	r18, 0x00	; 0
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	5f e4       	ldi	r21, 0x4F	; 79
 33c:	0e 94 02 03 	call	0x604	; 0x604 <__subsf3>
 340:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fixsfsi>
 344:	9b 01       	movw	r18, r22
 346:	ac 01       	movw	r20, r24
 348:	20 50       	subi	r18, 0x00	; 0
 34a:	30 40       	sbci	r19, 0x00	; 0
 34c:	40 40       	sbci	r20, 0x00	; 0
 34e:	50 48       	sbci	r21, 0x80	; 128
 350:	06 c0       	rjmp	.+12     	; 0x35e <__fixunssfsi+0x4a>
 352:	c8 01       	movw	r24, r16
 354:	b7 01       	movw	r22, r14
 356:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fixsfsi>
 35a:	9b 01       	movw	r18, r22
 35c:	ac 01       	movw	r20, r24
 35e:	b9 01       	movw	r22, r18
 360:	ca 01       	movw	r24, r20
 362:	1f 91       	pop	r17
 364:	0f 91       	pop	r16
 366:	ff 90       	pop	r15
 368:	ef 90       	pop	r14
 36a:	08 95       	ret

0000036c <_fpadd_parts>:
 36c:	a0 e0       	ldi	r26, 0x00	; 0
 36e:	b0 e0       	ldi	r27, 0x00	; 0
 370:	ec eb       	ldi	r30, 0xBC	; 188
 372:	f1 e0       	ldi	r31, 0x01	; 1
 374:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <__prologue_saves__>
 378:	dc 01       	movw	r26, r24
 37a:	2b 01       	movw	r4, r22
 37c:	fa 01       	movw	r30, r20
 37e:	9c 91       	ld	r25, X
 380:	92 30       	cpi	r25, 0x02	; 2
 382:	08 f4       	brcc	.+2      	; 0x386 <_fpadd_parts+0x1a>
 384:	39 c1       	rjmp	.+626    	; 0x5f8 <__stack+0x199>
 386:	eb 01       	movw	r28, r22
 388:	88 81       	ld	r24, Y
 38a:	82 30       	cpi	r24, 0x02	; 2
 38c:	08 f4       	brcc	.+2      	; 0x390 <_fpadd_parts+0x24>
 38e:	33 c1       	rjmp	.+614    	; 0x5f6 <__stack+0x197>
 390:	94 30       	cpi	r25, 0x04	; 4
 392:	69 f4       	brne	.+26     	; 0x3ae <_fpadd_parts+0x42>
 394:	84 30       	cpi	r24, 0x04	; 4
 396:	09 f0       	breq	.+2      	; 0x39a <_fpadd_parts+0x2e>
 398:	2f c1       	rjmp	.+606    	; 0x5f8 <__stack+0x199>
 39a:	11 96       	adiw	r26, 0x01	; 1
 39c:	9c 91       	ld	r25, X
 39e:	11 97       	sbiw	r26, 0x01	; 1
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
 3a2:	98 17       	cp	r25, r24
 3a4:	09 f4       	brne	.+2      	; 0x3a8 <_fpadd_parts+0x3c>
 3a6:	28 c1       	rjmp	.+592    	; 0x5f8 <__stack+0x199>
 3a8:	ae e6       	ldi	r26, 0x6E	; 110
 3aa:	b0 e0       	ldi	r27, 0x00	; 0
 3ac:	25 c1       	rjmp	.+586    	; 0x5f8 <__stack+0x199>
 3ae:	84 30       	cpi	r24, 0x04	; 4
 3b0:	09 f4       	brne	.+2      	; 0x3b4 <_fpadd_parts+0x48>
 3b2:	21 c1       	rjmp	.+578    	; 0x5f6 <__stack+0x197>
 3b4:	82 30       	cpi	r24, 0x02	; 2
 3b6:	a9 f4       	brne	.+42     	; 0x3e2 <_fpadd_parts+0x76>
 3b8:	92 30       	cpi	r25, 0x02	; 2
 3ba:	09 f0       	breq	.+2      	; 0x3be <_fpadd_parts+0x52>
 3bc:	1d c1       	rjmp	.+570    	; 0x5f8 <__stack+0x199>
 3be:	9a 01       	movw	r18, r20
 3c0:	ad 01       	movw	r20, r26
 3c2:	88 e0       	ldi	r24, 0x08	; 8
 3c4:	ea 01       	movw	r28, r20
 3c6:	09 90       	ld	r0, Y+
 3c8:	ae 01       	movw	r20, r28
 3ca:	e9 01       	movw	r28, r18
 3cc:	09 92       	st	Y+, r0
 3ce:	9e 01       	movw	r18, r28
 3d0:	81 50       	subi	r24, 0x01	; 1
 3d2:	c1 f7       	brne	.-16     	; 0x3c4 <_fpadd_parts+0x58>
 3d4:	e2 01       	movw	r28, r4
 3d6:	89 81       	ldd	r24, Y+1	; 0x01
 3d8:	11 96       	adiw	r26, 0x01	; 1
 3da:	9c 91       	ld	r25, X
 3dc:	89 23       	and	r24, r25
 3de:	81 83       	std	Z+1, r24	; 0x01
 3e0:	08 c1       	rjmp	.+528    	; 0x5f2 <__stack+0x193>
 3e2:	92 30       	cpi	r25, 0x02	; 2
 3e4:	09 f4       	brne	.+2      	; 0x3e8 <_fpadd_parts+0x7c>
 3e6:	07 c1       	rjmp	.+526    	; 0x5f6 <__stack+0x197>
 3e8:	12 96       	adiw	r26, 0x02	; 2
 3ea:	2d 90       	ld	r2, X+
 3ec:	3c 90       	ld	r3, X
 3ee:	13 97       	sbiw	r26, 0x03	; 3
 3f0:	eb 01       	movw	r28, r22
 3f2:	8a 81       	ldd	r24, Y+2	; 0x02
 3f4:	9b 81       	ldd	r25, Y+3	; 0x03
 3f6:	14 96       	adiw	r26, 0x04	; 4
 3f8:	ad 90       	ld	r10, X+
 3fa:	bd 90       	ld	r11, X+
 3fc:	cd 90       	ld	r12, X+
 3fe:	dc 90       	ld	r13, X
 400:	17 97       	sbiw	r26, 0x07	; 7
 402:	ec 80       	ldd	r14, Y+4	; 0x04
 404:	fd 80       	ldd	r15, Y+5	; 0x05
 406:	0e 81       	ldd	r16, Y+6	; 0x06
 408:	1f 81       	ldd	r17, Y+7	; 0x07
 40a:	91 01       	movw	r18, r2
 40c:	28 1b       	sub	r18, r24
 40e:	39 0b       	sbc	r19, r25
 410:	b9 01       	movw	r22, r18
 412:	37 ff       	sbrs	r19, 7
 414:	04 c0       	rjmp	.+8      	; 0x41e <_fpadd_parts+0xb2>
 416:	66 27       	eor	r22, r22
 418:	77 27       	eor	r23, r23
 41a:	62 1b       	sub	r22, r18
 41c:	73 0b       	sbc	r23, r19
 41e:	60 32       	cpi	r22, 0x20	; 32
 420:	71 05       	cpc	r23, r1
 422:	0c f0       	brlt	.+2      	; 0x426 <_fpadd_parts+0xba>
 424:	61 c0       	rjmp	.+194    	; 0x4e8 <__stack+0x89>
 426:	12 16       	cp	r1, r18
 428:	13 06       	cpc	r1, r19
 42a:	6c f5       	brge	.+90     	; 0x486 <__stack+0x27>
 42c:	37 01       	movw	r6, r14
 42e:	48 01       	movw	r8, r16
 430:	06 2e       	mov	r0, r22
 432:	04 c0       	rjmp	.+8      	; 0x43c <_fpadd_parts+0xd0>
 434:	96 94       	lsr	r9
 436:	87 94       	ror	r8
 438:	77 94       	ror	r7
 43a:	67 94       	ror	r6
 43c:	0a 94       	dec	r0
 43e:	d2 f7       	brpl	.-12     	; 0x434 <_fpadd_parts+0xc8>
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	40 e0       	ldi	r20, 0x00	; 0
 446:	50 e0       	ldi	r21, 0x00	; 0
 448:	04 c0       	rjmp	.+8      	; 0x452 <_fpadd_parts+0xe6>
 44a:	22 0f       	add	r18, r18
 44c:	33 1f       	adc	r19, r19
 44e:	44 1f       	adc	r20, r20
 450:	55 1f       	adc	r21, r21
 452:	6a 95       	dec	r22
 454:	d2 f7       	brpl	.-12     	; 0x44a <_fpadd_parts+0xde>
 456:	21 50       	subi	r18, 0x01	; 1
 458:	30 40       	sbci	r19, 0x00	; 0
 45a:	40 40       	sbci	r20, 0x00	; 0
 45c:	50 40       	sbci	r21, 0x00	; 0
 45e:	2e 21       	and	r18, r14
 460:	3f 21       	and	r19, r15
 462:	40 23       	and	r20, r16
 464:	51 23       	and	r21, r17
 466:	21 15       	cp	r18, r1
 468:	31 05       	cpc	r19, r1
 46a:	41 05       	cpc	r20, r1
 46c:	51 05       	cpc	r21, r1
 46e:	21 f0       	breq	.+8      	; 0x478 <__stack+0x19>
 470:	21 e0       	ldi	r18, 0x01	; 1
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	40 e0       	ldi	r20, 0x00	; 0
 476:	50 e0       	ldi	r21, 0x00	; 0
 478:	79 01       	movw	r14, r18
 47a:	8a 01       	movw	r16, r20
 47c:	e6 28       	or	r14, r6
 47e:	f7 28       	or	r15, r7
 480:	08 29       	or	r16, r8
 482:	19 29       	or	r17, r9
 484:	3c c0       	rjmp	.+120    	; 0x4fe <__stack+0x9f>
 486:	23 2b       	or	r18, r19
 488:	d1 f1       	breq	.+116    	; 0x4fe <__stack+0x9f>
 48a:	26 0e       	add	r2, r22
 48c:	37 1e       	adc	r3, r23
 48e:	35 01       	movw	r6, r10
 490:	46 01       	movw	r8, r12
 492:	06 2e       	mov	r0, r22
 494:	04 c0       	rjmp	.+8      	; 0x49e <__stack+0x3f>
 496:	96 94       	lsr	r9
 498:	87 94       	ror	r8
 49a:	77 94       	ror	r7
 49c:	67 94       	ror	r6
 49e:	0a 94       	dec	r0
 4a0:	d2 f7       	brpl	.-12     	; 0x496 <__stack+0x37>
 4a2:	21 e0       	ldi	r18, 0x01	; 1
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	40 e0       	ldi	r20, 0x00	; 0
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <__stack+0x55>
 4ac:	22 0f       	add	r18, r18
 4ae:	33 1f       	adc	r19, r19
 4b0:	44 1f       	adc	r20, r20
 4b2:	55 1f       	adc	r21, r21
 4b4:	6a 95       	dec	r22
 4b6:	d2 f7       	brpl	.-12     	; 0x4ac <__stack+0x4d>
 4b8:	21 50       	subi	r18, 0x01	; 1
 4ba:	30 40       	sbci	r19, 0x00	; 0
 4bc:	40 40       	sbci	r20, 0x00	; 0
 4be:	50 40       	sbci	r21, 0x00	; 0
 4c0:	2a 21       	and	r18, r10
 4c2:	3b 21       	and	r19, r11
 4c4:	4c 21       	and	r20, r12
 4c6:	5d 21       	and	r21, r13
 4c8:	21 15       	cp	r18, r1
 4ca:	31 05       	cpc	r19, r1
 4cc:	41 05       	cpc	r20, r1
 4ce:	51 05       	cpc	r21, r1
 4d0:	21 f0       	breq	.+8      	; 0x4da <__stack+0x7b>
 4d2:	21 e0       	ldi	r18, 0x01	; 1
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	40 e0       	ldi	r20, 0x00	; 0
 4d8:	50 e0       	ldi	r21, 0x00	; 0
 4da:	59 01       	movw	r10, r18
 4dc:	6a 01       	movw	r12, r20
 4de:	a6 28       	or	r10, r6
 4e0:	b7 28       	or	r11, r7
 4e2:	c8 28       	or	r12, r8
 4e4:	d9 28       	or	r13, r9
 4e6:	0b c0       	rjmp	.+22     	; 0x4fe <__stack+0x9f>
 4e8:	82 15       	cp	r24, r2
 4ea:	93 05       	cpc	r25, r3
 4ec:	2c f0       	brlt	.+10     	; 0x4f8 <__stack+0x99>
 4ee:	1c 01       	movw	r2, r24
 4f0:	aa 24       	eor	r10, r10
 4f2:	bb 24       	eor	r11, r11
 4f4:	65 01       	movw	r12, r10
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__stack+0x9f>
 4f8:	ee 24       	eor	r14, r14
 4fa:	ff 24       	eor	r15, r15
 4fc:	87 01       	movw	r16, r14
 4fe:	11 96       	adiw	r26, 0x01	; 1
 500:	9c 91       	ld	r25, X
 502:	d2 01       	movw	r26, r4
 504:	11 96       	adiw	r26, 0x01	; 1
 506:	8c 91       	ld	r24, X
 508:	98 17       	cp	r25, r24
 50a:	09 f4       	brne	.+2      	; 0x50e <__stack+0xaf>
 50c:	45 c0       	rjmp	.+138    	; 0x598 <__stack+0x139>
 50e:	99 23       	and	r25, r25
 510:	39 f0       	breq	.+14     	; 0x520 <__stack+0xc1>
 512:	a8 01       	movw	r20, r16
 514:	97 01       	movw	r18, r14
 516:	2a 19       	sub	r18, r10
 518:	3b 09       	sbc	r19, r11
 51a:	4c 09       	sbc	r20, r12
 51c:	5d 09       	sbc	r21, r13
 51e:	06 c0       	rjmp	.+12     	; 0x52c <__stack+0xcd>
 520:	a6 01       	movw	r20, r12
 522:	95 01       	movw	r18, r10
 524:	2e 19       	sub	r18, r14
 526:	3f 09       	sbc	r19, r15
 528:	40 0b       	sbc	r20, r16
 52a:	51 0b       	sbc	r21, r17
 52c:	57 fd       	sbrc	r21, 7
 52e:	08 c0       	rjmp	.+16     	; 0x540 <__stack+0xe1>
 530:	11 82       	std	Z+1, r1	; 0x01
 532:	33 82       	std	Z+3, r3	; 0x03
 534:	22 82       	std	Z+2, r2	; 0x02
 536:	24 83       	std	Z+4, r18	; 0x04
 538:	35 83       	std	Z+5, r19	; 0x05
 53a:	46 83       	std	Z+6, r20	; 0x06
 53c:	57 83       	std	Z+7, r21	; 0x07
 53e:	1d c0       	rjmp	.+58     	; 0x57a <__stack+0x11b>
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	81 83       	std	Z+1, r24	; 0x01
 544:	33 82       	std	Z+3, r3	; 0x03
 546:	22 82       	std	Z+2, r2	; 0x02
 548:	88 27       	eor	r24, r24
 54a:	99 27       	eor	r25, r25
 54c:	dc 01       	movw	r26, r24
 54e:	82 1b       	sub	r24, r18
 550:	93 0b       	sbc	r25, r19
 552:	a4 0b       	sbc	r26, r20
 554:	b5 0b       	sbc	r27, r21
 556:	84 83       	std	Z+4, r24	; 0x04
 558:	95 83       	std	Z+5, r25	; 0x05
 55a:	a6 83       	std	Z+6, r26	; 0x06
 55c:	b7 83       	std	Z+7, r27	; 0x07
 55e:	0d c0       	rjmp	.+26     	; 0x57a <__stack+0x11b>
 560:	22 0f       	add	r18, r18
 562:	33 1f       	adc	r19, r19
 564:	44 1f       	adc	r20, r20
 566:	55 1f       	adc	r21, r21
 568:	24 83       	std	Z+4, r18	; 0x04
 56a:	35 83       	std	Z+5, r19	; 0x05
 56c:	46 83       	std	Z+6, r20	; 0x06
 56e:	57 83       	std	Z+7, r21	; 0x07
 570:	82 81       	ldd	r24, Z+2	; 0x02
 572:	93 81       	ldd	r25, Z+3	; 0x03
 574:	01 97       	sbiw	r24, 0x01	; 1
 576:	93 83       	std	Z+3, r25	; 0x03
 578:	82 83       	std	Z+2, r24	; 0x02
 57a:	24 81       	ldd	r18, Z+4	; 0x04
 57c:	35 81       	ldd	r19, Z+5	; 0x05
 57e:	46 81       	ldd	r20, Z+6	; 0x06
 580:	57 81       	ldd	r21, Z+7	; 0x07
 582:	da 01       	movw	r26, r20
 584:	c9 01       	movw	r24, r18
 586:	01 97       	sbiw	r24, 0x01	; 1
 588:	a1 09       	sbc	r26, r1
 58a:	b1 09       	sbc	r27, r1
 58c:	8f 5f       	subi	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	af 4f       	sbci	r26, 0xFF	; 255
 592:	bf 43       	sbci	r27, 0x3F	; 63
 594:	28 f3       	brcs	.-54     	; 0x560 <__stack+0x101>
 596:	0b c0       	rjmp	.+22     	; 0x5ae <__stack+0x14f>
 598:	91 83       	std	Z+1, r25	; 0x01
 59a:	33 82       	std	Z+3, r3	; 0x03
 59c:	22 82       	std	Z+2, r2	; 0x02
 59e:	ea 0c       	add	r14, r10
 5a0:	fb 1c       	adc	r15, r11
 5a2:	0c 1d       	adc	r16, r12
 5a4:	1d 1d       	adc	r17, r13
 5a6:	e4 82       	std	Z+4, r14	; 0x04
 5a8:	f5 82       	std	Z+5, r15	; 0x05
 5aa:	06 83       	std	Z+6, r16	; 0x06
 5ac:	17 83       	std	Z+7, r17	; 0x07
 5ae:	83 e0       	ldi	r24, 0x03	; 3
 5b0:	80 83       	st	Z, r24
 5b2:	24 81       	ldd	r18, Z+4	; 0x04
 5b4:	35 81       	ldd	r19, Z+5	; 0x05
 5b6:	46 81       	ldd	r20, Z+6	; 0x06
 5b8:	57 81       	ldd	r21, Z+7	; 0x07
 5ba:	57 ff       	sbrs	r21, 7
 5bc:	1a c0       	rjmp	.+52     	; 0x5f2 <__stack+0x193>
 5be:	c9 01       	movw	r24, r18
 5c0:	aa 27       	eor	r26, r26
 5c2:	97 fd       	sbrc	r25, 7
 5c4:	a0 95       	com	r26
 5c6:	ba 2f       	mov	r27, r26
 5c8:	81 70       	andi	r24, 0x01	; 1
 5ca:	90 70       	andi	r25, 0x00	; 0
 5cc:	a0 70       	andi	r26, 0x00	; 0
 5ce:	b0 70       	andi	r27, 0x00	; 0
 5d0:	56 95       	lsr	r21
 5d2:	47 95       	ror	r20
 5d4:	37 95       	ror	r19
 5d6:	27 95       	ror	r18
 5d8:	82 2b       	or	r24, r18
 5da:	93 2b       	or	r25, r19
 5dc:	a4 2b       	or	r26, r20
 5de:	b5 2b       	or	r27, r21
 5e0:	84 83       	std	Z+4, r24	; 0x04
 5e2:	95 83       	std	Z+5, r25	; 0x05
 5e4:	a6 83       	std	Z+6, r26	; 0x06
 5e6:	b7 83       	std	Z+7, r27	; 0x07
 5e8:	82 81       	ldd	r24, Z+2	; 0x02
 5ea:	93 81       	ldd	r25, Z+3	; 0x03
 5ec:	01 96       	adiw	r24, 0x01	; 1
 5ee:	93 83       	std	Z+3, r25	; 0x03
 5f0:	82 83       	std	Z+2, r24	; 0x02
 5f2:	df 01       	movw	r26, r30
 5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <__stack+0x199>
 5f6:	d2 01       	movw	r26, r4
 5f8:	cd 01       	movw	r24, r26
 5fa:	cd b7       	in	r28, 0x3d	; 61
 5fc:	de b7       	in	r29, 0x3e	; 62
 5fe:	e2 e1       	ldi	r30, 0x12	; 18
 600:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__epilogue_restores__>

00000604 <__subsf3>:
 604:	a0 e2       	ldi	r26, 0x20	; 32
 606:	b0 e0       	ldi	r27, 0x00	; 0
 608:	e8 e0       	ldi	r30, 0x08	; 8
 60a:	f3 e0       	ldi	r31, 0x03	; 3
 60c:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__prologue_saves__+0x18>
 610:	69 83       	std	Y+1, r22	; 0x01
 612:	7a 83       	std	Y+2, r23	; 0x02
 614:	8b 83       	std	Y+3, r24	; 0x03
 616:	9c 83       	std	Y+4, r25	; 0x04
 618:	2d 83       	std	Y+5, r18	; 0x05
 61a:	3e 83       	std	Y+6, r19	; 0x06
 61c:	4f 83       	std	Y+7, r20	; 0x07
 61e:	58 87       	std	Y+8, r21	; 0x08
 620:	e9 e0       	ldi	r30, 0x09	; 9
 622:	ee 2e       	mov	r14, r30
 624:	f1 2c       	mov	r15, r1
 626:	ec 0e       	add	r14, r28
 628:	fd 1e       	adc	r15, r29
 62a:	ce 01       	movw	r24, r28
 62c:	01 96       	adiw	r24, 0x01	; 1
 62e:	b7 01       	movw	r22, r14
 630:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 634:	8e 01       	movw	r16, r28
 636:	0f 5e       	subi	r16, 0xEF	; 239
 638:	1f 4f       	sbci	r17, 0xFF	; 255
 63a:	ce 01       	movw	r24, r28
 63c:	05 96       	adiw	r24, 0x05	; 5
 63e:	b8 01       	movw	r22, r16
 640:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 644:	8a 89       	ldd	r24, Y+18	; 0x12
 646:	91 e0       	ldi	r25, 0x01	; 1
 648:	89 27       	eor	r24, r25
 64a:	8a 8b       	std	Y+18, r24	; 0x12
 64c:	c7 01       	movw	r24, r14
 64e:	b8 01       	movw	r22, r16
 650:	ae 01       	movw	r20, r28
 652:	47 5e       	subi	r20, 0xE7	; 231
 654:	5f 4f       	sbci	r21, 0xFF	; 255
 656:	0e 94 b6 01 	call	0x36c	; 0x36c <_fpadd_parts>
 65a:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__pack_f>
 65e:	a0 96       	adiw	r28, 0x20	; 32
 660:	e6 e0       	ldi	r30, 0x06	; 6
 662:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__epilogue_restores__+0x18>

00000666 <__addsf3>:
 666:	a0 e2       	ldi	r26, 0x20	; 32
 668:	b0 e0       	ldi	r27, 0x00	; 0
 66a:	e9 e3       	ldi	r30, 0x39	; 57
 66c:	f3 e0       	ldi	r31, 0x03	; 3
 66e:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__prologue_saves__+0x18>
 672:	69 83       	std	Y+1, r22	; 0x01
 674:	7a 83       	std	Y+2, r23	; 0x02
 676:	8b 83       	std	Y+3, r24	; 0x03
 678:	9c 83       	std	Y+4, r25	; 0x04
 67a:	2d 83       	std	Y+5, r18	; 0x05
 67c:	3e 83       	std	Y+6, r19	; 0x06
 67e:	4f 83       	std	Y+7, r20	; 0x07
 680:	58 87       	std	Y+8, r21	; 0x08
 682:	f9 e0       	ldi	r31, 0x09	; 9
 684:	ef 2e       	mov	r14, r31
 686:	f1 2c       	mov	r15, r1
 688:	ec 0e       	add	r14, r28
 68a:	fd 1e       	adc	r15, r29
 68c:	ce 01       	movw	r24, r28
 68e:	01 96       	adiw	r24, 0x01	; 1
 690:	b7 01       	movw	r22, r14
 692:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 696:	8e 01       	movw	r16, r28
 698:	0f 5e       	subi	r16, 0xEF	; 239
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	ce 01       	movw	r24, r28
 69e:	05 96       	adiw	r24, 0x05	; 5
 6a0:	b8 01       	movw	r22, r16
 6a2:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 6a6:	c7 01       	movw	r24, r14
 6a8:	b8 01       	movw	r22, r16
 6aa:	ae 01       	movw	r20, r28
 6ac:	47 5e       	subi	r20, 0xE7	; 231
 6ae:	5f 4f       	sbci	r21, 0xFF	; 255
 6b0:	0e 94 b6 01 	call	0x36c	; 0x36c <_fpadd_parts>
 6b4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__pack_f>
 6b8:	a0 96       	adiw	r28, 0x20	; 32
 6ba:	e6 e0       	ldi	r30, 0x06	; 6
 6bc:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__epilogue_restores__+0x18>

000006c0 <__mulsf3>:
 6c0:	a0 e2       	ldi	r26, 0x20	; 32
 6c2:	b0 e0       	ldi	r27, 0x00	; 0
 6c4:	e6 e6       	ldi	r30, 0x66	; 102
 6c6:	f3 e0       	ldi	r31, 0x03	; 3
 6c8:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <__prologue_saves__>
 6cc:	69 83       	std	Y+1, r22	; 0x01
 6ce:	7a 83       	std	Y+2, r23	; 0x02
 6d0:	8b 83       	std	Y+3, r24	; 0x03
 6d2:	9c 83       	std	Y+4, r25	; 0x04
 6d4:	2d 83       	std	Y+5, r18	; 0x05
 6d6:	3e 83       	std	Y+6, r19	; 0x06
 6d8:	4f 83       	std	Y+7, r20	; 0x07
 6da:	58 87       	std	Y+8, r21	; 0x08
 6dc:	ce 01       	movw	r24, r28
 6de:	01 96       	adiw	r24, 0x01	; 1
 6e0:	be 01       	movw	r22, r28
 6e2:	67 5f       	subi	r22, 0xF7	; 247
 6e4:	7f 4f       	sbci	r23, 0xFF	; 255
 6e6:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 6ea:	ce 01       	movw	r24, r28
 6ec:	05 96       	adiw	r24, 0x05	; 5
 6ee:	be 01       	movw	r22, r28
 6f0:	6f 5e       	subi	r22, 0xEF	; 239
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255
 6f4:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 6f8:	99 85       	ldd	r25, Y+9	; 0x09
 6fa:	92 30       	cpi	r25, 0x02	; 2
 6fc:	88 f0       	brcs	.+34     	; 0x720 <__mulsf3+0x60>
 6fe:	89 89       	ldd	r24, Y+17	; 0x11
 700:	82 30       	cpi	r24, 0x02	; 2
 702:	c8 f0       	brcs	.+50     	; 0x736 <__mulsf3+0x76>
 704:	94 30       	cpi	r25, 0x04	; 4
 706:	19 f4       	brne	.+6      	; 0x70e <__mulsf3+0x4e>
 708:	82 30       	cpi	r24, 0x02	; 2
 70a:	51 f4       	brne	.+20     	; 0x720 <__mulsf3+0x60>
 70c:	04 c0       	rjmp	.+8      	; 0x716 <__mulsf3+0x56>
 70e:	84 30       	cpi	r24, 0x04	; 4
 710:	29 f4       	brne	.+10     	; 0x71c <__mulsf3+0x5c>
 712:	92 30       	cpi	r25, 0x02	; 2
 714:	81 f4       	brne	.+32     	; 0x736 <__mulsf3+0x76>
 716:	8e e6       	ldi	r24, 0x6E	; 110
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	c6 c0       	rjmp	.+396    	; 0x8a8 <__mulsf3+0x1e8>
 71c:	92 30       	cpi	r25, 0x02	; 2
 71e:	49 f4       	brne	.+18     	; 0x732 <__mulsf3+0x72>
 720:	20 e0       	ldi	r18, 0x00	; 0
 722:	9a 85       	ldd	r25, Y+10	; 0x0a
 724:	8a 89       	ldd	r24, Y+18	; 0x12
 726:	98 13       	cpse	r25, r24
 728:	21 e0       	ldi	r18, 0x01	; 1
 72a:	2a 87       	std	Y+10, r18	; 0x0a
 72c:	ce 01       	movw	r24, r28
 72e:	09 96       	adiw	r24, 0x09	; 9
 730:	bb c0       	rjmp	.+374    	; 0x8a8 <__mulsf3+0x1e8>
 732:	82 30       	cpi	r24, 0x02	; 2
 734:	49 f4       	brne	.+18     	; 0x748 <__mulsf3+0x88>
 736:	20 e0       	ldi	r18, 0x00	; 0
 738:	9a 85       	ldd	r25, Y+10	; 0x0a
 73a:	8a 89       	ldd	r24, Y+18	; 0x12
 73c:	98 13       	cpse	r25, r24
 73e:	21 e0       	ldi	r18, 0x01	; 1
 740:	2a 8b       	std	Y+18, r18	; 0x12
 742:	ce 01       	movw	r24, r28
 744:	41 96       	adiw	r24, 0x11	; 17
 746:	b0 c0       	rjmp	.+352    	; 0x8a8 <__mulsf3+0x1e8>
 748:	2d 84       	ldd	r2, Y+13	; 0x0d
 74a:	3e 84       	ldd	r3, Y+14	; 0x0e
 74c:	4f 84       	ldd	r4, Y+15	; 0x0f
 74e:	58 88       	ldd	r5, Y+16	; 0x10
 750:	6d 88       	ldd	r6, Y+21	; 0x15
 752:	7e 88       	ldd	r7, Y+22	; 0x16
 754:	8f 88       	ldd	r8, Y+23	; 0x17
 756:	98 8c       	ldd	r9, Y+24	; 0x18
 758:	ee 24       	eor	r14, r14
 75a:	ff 24       	eor	r15, r15
 75c:	87 01       	movw	r16, r14
 75e:	aa 24       	eor	r10, r10
 760:	bb 24       	eor	r11, r11
 762:	65 01       	movw	r12, r10
 764:	40 e0       	ldi	r20, 0x00	; 0
 766:	50 e0       	ldi	r21, 0x00	; 0
 768:	60 e0       	ldi	r22, 0x00	; 0
 76a:	70 e0       	ldi	r23, 0x00	; 0
 76c:	e0 e0       	ldi	r30, 0x00	; 0
 76e:	f0 e0       	ldi	r31, 0x00	; 0
 770:	c1 01       	movw	r24, r2
 772:	81 70       	andi	r24, 0x01	; 1
 774:	90 70       	andi	r25, 0x00	; 0
 776:	89 2b       	or	r24, r25
 778:	e9 f0       	breq	.+58     	; 0x7b4 <__mulsf3+0xf4>
 77a:	e6 0c       	add	r14, r6
 77c:	f7 1c       	adc	r15, r7
 77e:	08 1d       	adc	r16, r8
 780:	19 1d       	adc	r17, r9
 782:	9a 01       	movw	r18, r20
 784:	ab 01       	movw	r20, r22
 786:	2a 0d       	add	r18, r10
 788:	3b 1d       	adc	r19, r11
 78a:	4c 1d       	adc	r20, r12
 78c:	5d 1d       	adc	r21, r13
 78e:	80 e0       	ldi	r24, 0x00	; 0
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	a0 e0       	ldi	r26, 0x00	; 0
 794:	b0 e0       	ldi	r27, 0x00	; 0
 796:	e6 14       	cp	r14, r6
 798:	f7 04       	cpc	r15, r7
 79a:	08 05       	cpc	r16, r8
 79c:	19 05       	cpc	r17, r9
 79e:	20 f4       	brcc	.+8      	; 0x7a8 <__mulsf3+0xe8>
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	a0 e0       	ldi	r26, 0x00	; 0
 7a6:	b0 e0       	ldi	r27, 0x00	; 0
 7a8:	ba 01       	movw	r22, r20
 7aa:	a9 01       	movw	r20, r18
 7ac:	48 0f       	add	r20, r24
 7ae:	59 1f       	adc	r21, r25
 7b0:	6a 1f       	adc	r22, r26
 7b2:	7b 1f       	adc	r23, r27
 7b4:	aa 0c       	add	r10, r10
 7b6:	bb 1c       	adc	r11, r11
 7b8:	cc 1c       	adc	r12, r12
 7ba:	dd 1c       	adc	r13, r13
 7bc:	97 fe       	sbrs	r9, 7
 7be:	08 c0       	rjmp	.+16     	; 0x7d0 <__mulsf3+0x110>
 7c0:	81 e0       	ldi	r24, 0x01	; 1
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	a0 e0       	ldi	r26, 0x00	; 0
 7c6:	b0 e0       	ldi	r27, 0x00	; 0
 7c8:	a8 2a       	or	r10, r24
 7ca:	b9 2a       	or	r11, r25
 7cc:	ca 2a       	or	r12, r26
 7ce:	db 2a       	or	r13, r27
 7d0:	31 96       	adiw	r30, 0x01	; 1
 7d2:	e0 32       	cpi	r30, 0x20	; 32
 7d4:	f1 05       	cpc	r31, r1
 7d6:	49 f0       	breq	.+18     	; 0x7ea <__mulsf3+0x12a>
 7d8:	66 0c       	add	r6, r6
 7da:	77 1c       	adc	r7, r7
 7dc:	88 1c       	adc	r8, r8
 7de:	99 1c       	adc	r9, r9
 7e0:	56 94       	lsr	r5
 7e2:	47 94       	ror	r4
 7e4:	37 94       	ror	r3
 7e6:	27 94       	ror	r2
 7e8:	c3 cf       	rjmp	.-122    	; 0x770 <__mulsf3+0xb0>
 7ea:	fa 85       	ldd	r31, Y+10	; 0x0a
 7ec:	ea 89       	ldd	r30, Y+18	; 0x12
 7ee:	2b 89       	ldd	r18, Y+19	; 0x13
 7f0:	3c 89       	ldd	r19, Y+20	; 0x14
 7f2:	8b 85       	ldd	r24, Y+11	; 0x0b
 7f4:	9c 85       	ldd	r25, Y+12	; 0x0c
 7f6:	28 0f       	add	r18, r24
 7f8:	39 1f       	adc	r19, r25
 7fa:	2e 5f       	subi	r18, 0xFE	; 254
 7fc:	3f 4f       	sbci	r19, 0xFF	; 255
 7fe:	17 c0       	rjmp	.+46     	; 0x82e <__mulsf3+0x16e>
 800:	ca 01       	movw	r24, r20
 802:	81 70       	andi	r24, 0x01	; 1
 804:	90 70       	andi	r25, 0x00	; 0
 806:	89 2b       	or	r24, r25
 808:	61 f0       	breq	.+24     	; 0x822 <__mulsf3+0x162>
 80a:	16 95       	lsr	r17
 80c:	07 95       	ror	r16
 80e:	f7 94       	ror	r15
 810:	e7 94       	ror	r14
 812:	80 e0       	ldi	r24, 0x00	; 0
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	a0 e0       	ldi	r26, 0x00	; 0
 818:	b0 e8       	ldi	r27, 0x80	; 128
 81a:	e8 2a       	or	r14, r24
 81c:	f9 2a       	or	r15, r25
 81e:	0a 2b       	or	r16, r26
 820:	1b 2b       	or	r17, r27
 822:	76 95       	lsr	r23
 824:	67 95       	ror	r22
 826:	57 95       	ror	r21
 828:	47 95       	ror	r20
 82a:	2f 5f       	subi	r18, 0xFF	; 255
 82c:	3f 4f       	sbci	r19, 0xFF	; 255
 82e:	77 fd       	sbrc	r23, 7
 830:	e7 cf       	rjmp	.-50     	; 0x800 <__mulsf3+0x140>
 832:	0c c0       	rjmp	.+24     	; 0x84c <__mulsf3+0x18c>
 834:	44 0f       	add	r20, r20
 836:	55 1f       	adc	r21, r21
 838:	66 1f       	adc	r22, r22
 83a:	77 1f       	adc	r23, r23
 83c:	17 fd       	sbrc	r17, 7
 83e:	41 60       	ori	r20, 0x01	; 1
 840:	ee 0c       	add	r14, r14
 842:	ff 1c       	adc	r15, r15
 844:	00 1f       	adc	r16, r16
 846:	11 1f       	adc	r17, r17
 848:	21 50       	subi	r18, 0x01	; 1
 84a:	30 40       	sbci	r19, 0x00	; 0
 84c:	40 30       	cpi	r20, 0x00	; 0
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	59 07       	cpc	r21, r25
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	69 07       	cpc	r22, r25
 856:	90 e4       	ldi	r25, 0x40	; 64
 858:	79 07       	cpc	r23, r25
 85a:	60 f3       	brcs	.-40     	; 0x834 <__mulsf3+0x174>
 85c:	2b 8f       	std	Y+27, r18	; 0x1b
 85e:	3c 8f       	std	Y+28, r19	; 0x1c
 860:	db 01       	movw	r26, r22
 862:	ca 01       	movw	r24, r20
 864:	8f 77       	andi	r24, 0x7F	; 127
 866:	90 70       	andi	r25, 0x00	; 0
 868:	a0 70       	andi	r26, 0x00	; 0
 86a:	b0 70       	andi	r27, 0x00	; 0
 86c:	80 34       	cpi	r24, 0x40	; 64
 86e:	91 05       	cpc	r25, r1
 870:	a1 05       	cpc	r26, r1
 872:	b1 05       	cpc	r27, r1
 874:	61 f4       	brne	.+24     	; 0x88e <__mulsf3+0x1ce>
 876:	47 fd       	sbrc	r20, 7
 878:	0a c0       	rjmp	.+20     	; 0x88e <__mulsf3+0x1ce>
 87a:	e1 14       	cp	r14, r1
 87c:	f1 04       	cpc	r15, r1
 87e:	01 05       	cpc	r16, r1
 880:	11 05       	cpc	r17, r1
 882:	29 f0       	breq	.+10     	; 0x88e <__mulsf3+0x1ce>
 884:	40 5c       	subi	r20, 0xC0	; 192
 886:	5f 4f       	sbci	r21, 0xFF	; 255
 888:	6f 4f       	sbci	r22, 0xFF	; 255
 88a:	7f 4f       	sbci	r23, 0xFF	; 255
 88c:	40 78       	andi	r20, 0x80	; 128
 88e:	1a 8e       	std	Y+26, r1	; 0x1a
 890:	fe 17       	cp	r31, r30
 892:	11 f0       	breq	.+4      	; 0x898 <__mulsf3+0x1d8>
 894:	81 e0       	ldi	r24, 0x01	; 1
 896:	8a 8f       	std	Y+26, r24	; 0x1a
 898:	4d 8f       	std	Y+29, r20	; 0x1d
 89a:	5e 8f       	std	Y+30, r21	; 0x1e
 89c:	6f 8f       	std	Y+31, r22	; 0x1f
 89e:	78 a3       	std	Y+32, r23	; 0x20
 8a0:	83 e0       	ldi	r24, 0x03	; 3
 8a2:	89 8f       	std	Y+25, r24	; 0x19
 8a4:	ce 01       	movw	r24, r28
 8a6:	49 96       	adiw	r24, 0x19	; 25
 8a8:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__pack_f>
 8ac:	a0 96       	adiw	r28, 0x20	; 32
 8ae:	e2 e1       	ldi	r30, 0x12	; 18
 8b0:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__epilogue_restores__>

000008b4 <__gtsf2>:
 8b4:	a8 e1       	ldi	r26, 0x18	; 24
 8b6:	b0 e0       	ldi	r27, 0x00	; 0
 8b8:	e0 e6       	ldi	r30, 0x60	; 96
 8ba:	f4 e0       	ldi	r31, 0x04	; 4
 8bc:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__prologue_saves__+0x18>
 8c0:	69 83       	std	Y+1, r22	; 0x01
 8c2:	7a 83       	std	Y+2, r23	; 0x02
 8c4:	8b 83       	std	Y+3, r24	; 0x03
 8c6:	9c 83       	std	Y+4, r25	; 0x04
 8c8:	2d 83       	std	Y+5, r18	; 0x05
 8ca:	3e 83       	std	Y+6, r19	; 0x06
 8cc:	4f 83       	std	Y+7, r20	; 0x07
 8ce:	58 87       	std	Y+8, r21	; 0x08
 8d0:	89 e0       	ldi	r24, 0x09	; 9
 8d2:	e8 2e       	mov	r14, r24
 8d4:	f1 2c       	mov	r15, r1
 8d6:	ec 0e       	add	r14, r28
 8d8:	fd 1e       	adc	r15, r29
 8da:	ce 01       	movw	r24, r28
 8dc:	01 96       	adiw	r24, 0x01	; 1
 8de:	b7 01       	movw	r22, r14
 8e0:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 8e4:	8e 01       	movw	r16, r28
 8e6:	0f 5e       	subi	r16, 0xEF	; 239
 8e8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ea:	ce 01       	movw	r24, r28
 8ec:	05 96       	adiw	r24, 0x05	; 5
 8ee:	b8 01       	movw	r22, r16
 8f0:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 8f4:	89 85       	ldd	r24, Y+9	; 0x09
 8f6:	82 30       	cpi	r24, 0x02	; 2
 8f8:	40 f0       	brcs	.+16     	; 0x90a <__gtsf2+0x56>
 8fa:	89 89       	ldd	r24, Y+17	; 0x11
 8fc:	82 30       	cpi	r24, 0x02	; 2
 8fe:	28 f0       	brcs	.+10     	; 0x90a <__gtsf2+0x56>
 900:	c7 01       	movw	r24, r14
 902:	b8 01       	movw	r22, r16
 904:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fpcmp_parts_f>
 908:	01 c0       	rjmp	.+2      	; 0x90c <__gtsf2+0x58>
 90a:	8f ef       	ldi	r24, 0xFF	; 255
 90c:	68 96       	adiw	r28, 0x18	; 24
 90e:	e6 e0       	ldi	r30, 0x06	; 6
 910:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__epilogue_restores__+0x18>

00000914 <__gesf2>:
 914:	a8 e1       	ldi	r26, 0x18	; 24
 916:	b0 e0       	ldi	r27, 0x00	; 0
 918:	e0 e9       	ldi	r30, 0x90	; 144
 91a:	f4 e0       	ldi	r31, 0x04	; 4
 91c:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__prologue_saves__+0x18>
 920:	69 83       	std	Y+1, r22	; 0x01
 922:	7a 83       	std	Y+2, r23	; 0x02
 924:	8b 83       	std	Y+3, r24	; 0x03
 926:	9c 83       	std	Y+4, r25	; 0x04
 928:	2d 83       	std	Y+5, r18	; 0x05
 92a:	3e 83       	std	Y+6, r19	; 0x06
 92c:	4f 83       	std	Y+7, r20	; 0x07
 92e:	58 87       	std	Y+8, r21	; 0x08
 930:	89 e0       	ldi	r24, 0x09	; 9
 932:	e8 2e       	mov	r14, r24
 934:	f1 2c       	mov	r15, r1
 936:	ec 0e       	add	r14, r28
 938:	fd 1e       	adc	r15, r29
 93a:	ce 01       	movw	r24, r28
 93c:	01 96       	adiw	r24, 0x01	; 1
 93e:	b7 01       	movw	r22, r14
 940:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 944:	8e 01       	movw	r16, r28
 946:	0f 5e       	subi	r16, 0xEF	; 239
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	ce 01       	movw	r24, r28
 94c:	05 96       	adiw	r24, 0x05	; 5
 94e:	b8 01       	movw	r22, r16
 950:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 954:	89 85       	ldd	r24, Y+9	; 0x09
 956:	82 30       	cpi	r24, 0x02	; 2
 958:	40 f0       	brcs	.+16     	; 0x96a <__gesf2+0x56>
 95a:	89 89       	ldd	r24, Y+17	; 0x11
 95c:	82 30       	cpi	r24, 0x02	; 2
 95e:	28 f0       	brcs	.+10     	; 0x96a <__gesf2+0x56>
 960:	c7 01       	movw	r24, r14
 962:	b8 01       	movw	r22, r16
 964:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fpcmp_parts_f>
 968:	01 c0       	rjmp	.+2      	; 0x96c <__gesf2+0x58>
 96a:	8f ef       	ldi	r24, 0xFF	; 255
 96c:	68 96       	adiw	r28, 0x18	; 24
 96e:	e6 e0       	ldi	r30, 0x06	; 6
 970:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__epilogue_restores__+0x18>

00000974 <__ltsf2>:
 974:	a8 e1       	ldi	r26, 0x18	; 24
 976:	b0 e0       	ldi	r27, 0x00	; 0
 978:	e0 ec       	ldi	r30, 0xC0	; 192
 97a:	f4 e0       	ldi	r31, 0x04	; 4
 97c:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__prologue_saves__+0x18>
 980:	69 83       	std	Y+1, r22	; 0x01
 982:	7a 83       	std	Y+2, r23	; 0x02
 984:	8b 83       	std	Y+3, r24	; 0x03
 986:	9c 83       	std	Y+4, r25	; 0x04
 988:	2d 83       	std	Y+5, r18	; 0x05
 98a:	3e 83       	std	Y+6, r19	; 0x06
 98c:	4f 83       	std	Y+7, r20	; 0x07
 98e:	58 87       	std	Y+8, r21	; 0x08
 990:	89 e0       	ldi	r24, 0x09	; 9
 992:	e8 2e       	mov	r14, r24
 994:	f1 2c       	mov	r15, r1
 996:	ec 0e       	add	r14, r28
 998:	fd 1e       	adc	r15, r29
 99a:	ce 01       	movw	r24, r28
 99c:	01 96       	adiw	r24, 0x01	; 1
 99e:	b7 01       	movw	r22, r14
 9a0:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 9a4:	8e 01       	movw	r16, r28
 9a6:	0f 5e       	subi	r16, 0xEF	; 239
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	ce 01       	movw	r24, r28
 9ac:	05 96       	adiw	r24, 0x05	; 5
 9ae:	b8 01       	movw	r22, r16
 9b0:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 9b4:	89 85       	ldd	r24, Y+9	; 0x09
 9b6:	82 30       	cpi	r24, 0x02	; 2
 9b8:	40 f0       	brcs	.+16     	; 0x9ca <__ltsf2+0x56>
 9ba:	89 89       	ldd	r24, Y+17	; 0x11
 9bc:	82 30       	cpi	r24, 0x02	; 2
 9be:	28 f0       	brcs	.+10     	; 0x9ca <__ltsf2+0x56>
 9c0:	c7 01       	movw	r24, r14
 9c2:	b8 01       	movw	r22, r16
 9c4:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fpcmp_parts_f>
 9c8:	01 c0       	rjmp	.+2      	; 0x9cc <__ltsf2+0x58>
 9ca:	81 e0       	ldi	r24, 0x01	; 1
 9cc:	68 96       	adiw	r28, 0x18	; 24
 9ce:	e6 e0       	ldi	r30, 0x06	; 6
 9d0:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__epilogue_restores__+0x18>

000009d4 <__fixsfsi>:
 9d4:	ac e0       	ldi	r26, 0x0C	; 12
 9d6:	b0 e0       	ldi	r27, 0x00	; 0
 9d8:	e0 ef       	ldi	r30, 0xF0	; 240
 9da:	f4 e0       	ldi	r31, 0x04	; 4
 9dc:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__prologue_saves__+0x20>
 9e0:	69 83       	std	Y+1, r22	; 0x01
 9e2:	7a 83       	std	Y+2, r23	; 0x02
 9e4:	8b 83       	std	Y+3, r24	; 0x03
 9e6:	9c 83       	std	Y+4, r25	; 0x04
 9e8:	ce 01       	movw	r24, r28
 9ea:	01 96       	adiw	r24, 0x01	; 1
 9ec:	be 01       	movw	r22, r28
 9ee:	6b 5f       	subi	r22, 0xFB	; 251
 9f0:	7f 4f       	sbci	r23, 0xFF	; 255
 9f2:	0e 94 13 06 	call	0xc26	; 0xc26 <__unpack_f>
 9f6:	8d 81       	ldd	r24, Y+5	; 0x05
 9f8:	82 30       	cpi	r24, 0x02	; 2
 9fa:	61 f1       	breq	.+88     	; 0xa54 <__fixsfsi+0x80>
 9fc:	82 30       	cpi	r24, 0x02	; 2
 9fe:	50 f1       	brcs	.+84     	; 0xa54 <__fixsfsi+0x80>
 a00:	84 30       	cpi	r24, 0x04	; 4
 a02:	21 f4       	brne	.+8      	; 0xa0c <__fixsfsi+0x38>
 a04:	8e 81       	ldd	r24, Y+6	; 0x06
 a06:	88 23       	and	r24, r24
 a08:	51 f1       	breq	.+84     	; 0xa5e <__fixsfsi+0x8a>
 a0a:	2e c0       	rjmp	.+92     	; 0xa68 <__fixsfsi+0x94>
 a0c:	2f 81       	ldd	r18, Y+7	; 0x07
 a0e:	38 85       	ldd	r19, Y+8	; 0x08
 a10:	37 fd       	sbrc	r19, 7
 a12:	20 c0       	rjmp	.+64     	; 0xa54 <__fixsfsi+0x80>
 a14:	6e 81       	ldd	r22, Y+6	; 0x06
 a16:	2f 31       	cpi	r18, 0x1F	; 31
 a18:	31 05       	cpc	r19, r1
 a1a:	1c f0       	brlt	.+6      	; 0xa22 <__fixsfsi+0x4e>
 a1c:	66 23       	and	r22, r22
 a1e:	f9 f0       	breq	.+62     	; 0xa5e <__fixsfsi+0x8a>
 a20:	23 c0       	rjmp	.+70     	; 0xa68 <__fixsfsi+0x94>
 a22:	8e e1       	ldi	r24, 0x1E	; 30
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	82 1b       	sub	r24, r18
 a28:	93 0b       	sbc	r25, r19
 a2a:	29 85       	ldd	r18, Y+9	; 0x09
 a2c:	3a 85       	ldd	r19, Y+10	; 0x0a
 a2e:	4b 85       	ldd	r20, Y+11	; 0x0b
 a30:	5c 85       	ldd	r21, Y+12	; 0x0c
 a32:	04 c0       	rjmp	.+8      	; 0xa3c <__fixsfsi+0x68>
 a34:	56 95       	lsr	r21
 a36:	47 95       	ror	r20
 a38:	37 95       	ror	r19
 a3a:	27 95       	ror	r18
 a3c:	8a 95       	dec	r24
 a3e:	d2 f7       	brpl	.-12     	; 0xa34 <__fixsfsi+0x60>
 a40:	66 23       	and	r22, r22
 a42:	b1 f0       	breq	.+44     	; 0xa70 <__fixsfsi+0x9c>
 a44:	50 95       	com	r21
 a46:	40 95       	com	r20
 a48:	30 95       	com	r19
 a4a:	21 95       	neg	r18
 a4c:	3f 4f       	sbci	r19, 0xFF	; 255
 a4e:	4f 4f       	sbci	r20, 0xFF	; 255
 a50:	5f 4f       	sbci	r21, 0xFF	; 255
 a52:	0e c0       	rjmp	.+28     	; 0xa70 <__fixsfsi+0x9c>
 a54:	20 e0       	ldi	r18, 0x00	; 0
 a56:	30 e0       	ldi	r19, 0x00	; 0
 a58:	40 e0       	ldi	r20, 0x00	; 0
 a5a:	50 e0       	ldi	r21, 0x00	; 0
 a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__fixsfsi+0x9c>
 a5e:	2f ef       	ldi	r18, 0xFF	; 255
 a60:	3f ef       	ldi	r19, 0xFF	; 255
 a62:	4f ef       	ldi	r20, 0xFF	; 255
 a64:	5f e7       	ldi	r21, 0x7F	; 127
 a66:	04 c0       	rjmp	.+8      	; 0xa70 <__fixsfsi+0x9c>
 a68:	20 e0       	ldi	r18, 0x00	; 0
 a6a:	30 e0       	ldi	r19, 0x00	; 0
 a6c:	40 e0       	ldi	r20, 0x00	; 0
 a6e:	50 e8       	ldi	r21, 0x80	; 128
 a70:	b9 01       	movw	r22, r18
 a72:	ca 01       	movw	r24, r20
 a74:	2c 96       	adiw	r28, 0x0c	; 12
 a76:	e2 e0       	ldi	r30, 0x02	; 2
 a78:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__epilogue_restores__+0x20>

00000a7c <__pack_f>:
 a7c:	df 92       	push	r13
 a7e:	ef 92       	push	r14
 a80:	ff 92       	push	r15
 a82:	0f 93       	push	r16
 a84:	1f 93       	push	r17
 a86:	fc 01       	movw	r30, r24
 a88:	e4 80       	ldd	r14, Z+4	; 0x04
 a8a:	f5 80       	ldd	r15, Z+5	; 0x05
 a8c:	06 81       	ldd	r16, Z+6	; 0x06
 a8e:	17 81       	ldd	r17, Z+7	; 0x07
 a90:	d1 80       	ldd	r13, Z+1	; 0x01
 a92:	80 81       	ld	r24, Z
 a94:	82 30       	cpi	r24, 0x02	; 2
 a96:	48 f4       	brcc	.+18     	; 0xaaa <__pack_f+0x2e>
 a98:	80 e0       	ldi	r24, 0x00	; 0
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	a0 e1       	ldi	r26, 0x10	; 16
 a9e:	b0 e0       	ldi	r27, 0x00	; 0
 aa0:	e8 2a       	or	r14, r24
 aa2:	f9 2a       	or	r15, r25
 aa4:	0a 2b       	or	r16, r26
 aa6:	1b 2b       	or	r17, r27
 aa8:	a5 c0       	rjmp	.+330    	; 0xbf4 <__pack_f+0x178>
 aaa:	84 30       	cpi	r24, 0x04	; 4
 aac:	09 f4       	brne	.+2      	; 0xab0 <__pack_f+0x34>
 aae:	9f c0       	rjmp	.+318    	; 0xbee <__pack_f+0x172>
 ab0:	82 30       	cpi	r24, 0x02	; 2
 ab2:	21 f4       	brne	.+8      	; 0xabc <__pack_f+0x40>
 ab4:	ee 24       	eor	r14, r14
 ab6:	ff 24       	eor	r15, r15
 ab8:	87 01       	movw	r16, r14
 aba:	05 c0       	rjmp	.+10     	; 0xac6 <__pack_f+0x4a>
 abc:	e1 14       	cp	r14, r1
 abe:	f1 04       	cpc	r15, r1
 ac0:	01 05       	cpc	r16, r1
 ac2:	11 05       	cpc	r17, r1
 ac4:	19 f4       	brne	.+6      	; 0xacc <__pack_f+0x50>
 ac6:	e0 e0       	ldi	r30, 0x00	; 0
 ac8:	f0 e0       	ldi	r31, 0x00	; 0
 aca:	96 c0       	rjmp	.+300    	; 0xbf8 <__pack_f+0x17c>
 acc:	62 81       	ldd	r22, Z+2	; 0x02
 ace:	73 81       	ldd	r23, Z+3	; 0x03
 ad0:	9f ef       	ldi	r25, 0xFF	; 255
 ad2:	62 38       	cpi	r22, 0x82	; 130
 ad4:	79 07       	cpc	r23, r25
 ad6:	0c f0       	brlt	.+2      	; 0xada <__pack_f+0x5e>
 ad8:	5b c0       	rjmp	.+182    	; 0xb90 <__pack_f+0x114>
 ada:	22 e8       	ldi	r18, 0x82	; 130
 adc:	3f ef       	ldi	r19, 0xFF	; 255
 ade:	26 1b       	sub	r18, r22
 ae0:	37 0b       	sbc	r19, r23
 ae2:	2a 31       	cpi	r18, 0x1A	; 26
 ae4:	31 05       	cpc	r19, r1
 ae6:	2c f0       	brlt	.+10     	; 0xaf2 <__pack_f+0x76>
 ae8:	20 e0       	ldi	r18, 0x00	; 0
 aea:	30 e0       	ldi	r19, 0x00	; 0
 aec:	40 e0       	ldi	r20, 0x00	; 0
 aee:	50 e0       	ldi	r21, 0x00	; 0
 af0:	2a c0       	rjmp	.+84     	; 0xb46 <__pack_f+0xca>
 af2:	b8 01       	movw	r22, r16
 af4:	a7 01       	movw	r20, r14
 af6:	02 2e       	mov	r0, r18
 af8:	04 c0       	rjmp	.+8      	; 0xb02 <__pack_f+0x86>
 afa:	76 95       	lsr	r23
 afc:	67 95       	ror	r22
 afe:	57 95       	ror	r21
 b00:	47 95       	ror	r20
 b02:	0a 94       	dec	r0
 b04:	d2 f7       	brpl	.-12     	; 0xafa <__pack_f+0x7e>
 b06:	81 e0       	ldi	r24, 0x01	; 1
 b08:	90 e0       	ldi	r25, 0x00	; 0
 b0a:	a0 e0       	ldi	r26, 0x00	; 0
 b0c:	b0 e0       	ldi	r27, 0x00	; 0
 b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__pack_f+0x9c>
 b10:	88 0f       	add	r24, r24
 b12:	99 1f       	adc	r25, r25
 b14:	aa 1f       	adc	r26, r26
 b16:	bb 1f       	adc	r27, r27
 b18:	2a 95       	dec	r18
 b1a:	d2 f7       	brpl	.-12     	; 0xb10 <__pack_f+0x94>
 b1c:	01 97       	sbiw	r24, 0x01	; 1
 b1e:	a1 09       	sbc	r26, r1
 b20:	b1 09       	sbc	r27, r1
 b22:	8e 21       	and	r24, r14
 b24:	9f 21       	and	r25, r15
 b26:	a0 23       	and	r26, r16
 b28:	b1 23       	and	r27, r17
 b2a:	00 97       	sbiw	r24, 0x00	; 0
 b2c:	a1 05       	cpc	r26, r1
 b2e:	b1 05       	cpc	r27, r1
 b30:	21 f0       	breq	.+8      	; 0xb3a <__pack_f+0xbe>
 b32:	81 e0       	ldi	r24, 0x01	; 1
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	a0 e0       	ldi	r26, 0x00	; 0
 b38:	b0 e0       	ldi	r27, 0x00	; 0
 b3a:	9a 01       	movw	r18, r20
 b3c:	ab 01       	movw	r20, r22
 b3e:	28 2b       	or	r18, r24
 b40:	39 2b       	or	r19, r25
 b42:	4a 2b       	or	r20, r26
 b44:	5b 2b       	or	r21, r27
 b46:	da 01       	movw	r26, r20
 b48:	c9 01       	movw	r24, r18
 b4a:	8f 77       	andi	r24, 0x7F	; 127
 b4c:	90 70       	andi	r25, 0x00	; 0
 b4e:	a0 70       	andi	r26, 0x00	; 0
 b50:	b0 70       	andi	r27, 0x00	; 0
 b52:	80 34       	cpi	r24, 0x40	; 64
 b54:	91 05       	cpc	r25, r1
 b56:	a1 05       	cpc	r26, r1
 b58:	b1 05       	cpc	r27, r1
 b5a:	39 f4       	brne	.+14     	; 0xb6a <__pack_f+0xee>
 b5c:	27 ff       	sbrs	r18, 7
 b5e:	09 c0       	rjmp	.+18     	; 0xb72 <__pack_f+0xf6>
 b60:	20 5c       	subi	r18, 0xC0	; 192
 b62:	3f 4f       	sbci	r19, 0xFF	; 255
 b64:	4f 4f       	sbci	r20, 0xFF	; 255
 b66:	5f 4f       	sbci	r21, 0xFF	; 255
 b68:	04 c0       	rjmp	.+8      	; 0xb72 <__pack_f+0xf6>
 b6a:	21 5c       	subi	r18, 0xC1	; 193
 b6c:	3f 4f       	sbci	r19, 0xFF	; 255
 b6e:	4f 4f       	sbci	r20, 0xFF	; 255
 b70:	5f 4f       	sbci	r21, 0xFF	; 255
 b72:	e0 e0       	ldi	r30, 0x00	; 0
 b74:	f0 e0       	ldi	r31, 0x00	; 0
 b76:	20 30       	cpi	r18, 0x00	; 0
 b78:	a0 e0       	ldi	r26, 0x00	; 0
 b7a:	3a 07       	cpc	r19, r26
 b7c:	a0 e0       	ldi	r26, 0x00	; 0
 b7e:	4a 07       	cpc	r20, r26
 b80:	a0 e4       	ldi	r26, 0x40	; 64
 b82:	5a 07       	cpc	r21, r26
 b84:	10 f0       	brcs	.+4      	; 0xb8a <__pack_f+0x10e>
 b86:	e1 e0       	ldi	r30, 0x01	; 1
 b88:	f0 e0       	ldi	r31, 0x00	; 0
 b8a:	79 01       	movw	r14, r18
 b8c:	8a 01       	movw	r16, r20
 b8e:	27 c0       	rjmp	.+78     	; 0xbde <__pack_f+0x162>
 b90:	60 38       	cpi	r22, 0x80	; 128
 b92:	71 05       	cpc	r23, r1
 b94:	64 f5       	brge	.+88     	; 0xbee <__pack_f+0x172>
 b96:	fb 01       	movw	r30, r22
 b98:	e1 58       	subi	r30, 0x81	; 129
 b9a:	ff 4f       	sbci	r31, 0xFF	; 255
 b9c:	d8 01       	movw	r26, r16
 b9e:	c7 01       	movw	r24, r14
 ba0:	8f 77       	andi	r24, 0x7F	; 127
 ba2:	90 70       	andi	r25, 0x00	; 0
 ba4:	a0 70       	andi	r26, 0x00	; 0
 ba6:	b0 70       	andi	r27, 0x00	; 0
 ba8:	80 34       	cpi	r24, 0x40	; 64
 baa:	91 05       	cpc	r25, r1
 bac:	a1 05       	cpc	r26, r1
 bae:	b1 05       	cpc	r27, r1
 bb0:	39 f4       	brne	.+14     	; 0xbc0 <__pack_f+0x144>
 bb2:	e7 fe       	sbrs	r14, 7
 bb4:	0d c0       	rjmp	.+26     	; 0xbd0 <__pack_f+0x154>
 bb6:	80 e4       	ldi	r24, 0x40	; 64
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	a0 e0       	ldi	r26, 0x00	; 0
 bbc:	b0 e0       	ldi	r27, 0x00	; 0
 bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0x14c>
 bc0:	8f e3       	ldi	r24, 0x3F	; 63
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	a0 e0       	ldi	r26, 0x00	; 0
 bc6:	b0 e0       	ldi	r27, 0x00	; 0
 bc8:	e8 0e       	add	r14, r24
 bca:	f9 1e       	adc	r15, r25
 bcc:	0a 1f       	adc	r16, r26
 bce:	1b 1f       	adc	r17, r27
 bd0:	17 ff       	sbrs	r17, 7
 bd2:	05 c0       	rjmp	.+10     	; 0xbde <__pack_f+0x162>
 bd4:	16 95       	lsr	r17
 bd6:	07 95       	ror	r16
 bd8:	f7 94       	ror	r15
 bda:	e7 94       	ror	r14
 bdc:	31 96       	adiw	r30, 0x01	; 1
 bde:	87 e0       	ldi	r24, 0x07	; 7
 be0:	16 95       	lsr	r17
 be2:	07 95       	ror	r16
 be4:	f7 94       	ror	r15
 be6:	e7 94       	ror	r14
 be8:	8a 95       	dec	r24
 bea:	d1 f7       	brne	.-12     	; 0xbe0 <__pack_f+0x164>
 bec:	05 c0       	rjmp	.+10     	; 0xbf8 <__pack_f+0x17c>
 bee:	ee 24       	eor	r14, r14
 bf0:	ff 24       	eor	r15, r15
 bf2:	87 01       	movw	r16, r14
 bf4:	ef ef       	ldi	r30, 0xFF	; 255
 bf6:	f0 e0       	ldi	r31, 0x00	; 0
 bf8:	6e 2f       	mov	r22, r30
 bfa:	67 95       	ror	r22
 bfc:	66 27       	eor	r22, r22
 bfe:	67 95       	ror	r22
 c00:	90 2f       	mov	r25, r16
 c02:	9f 77       	andi	r25, 0x7F	; 127
 c04:	d7 94       	ror	r13
 c06:	dd 24       	eor	r13, r13
 c08:	d7 94       	ror	r13
 c0a:	8e 2f       	mov	r24, r30
 c0c:	86 95       	lsr	r24
 c0e:	49 2f       	mov	r20, r25
 c10:	46 2b       	or	r20, r22
 c12:	58 2f       	mov	r21, r24
 c14:	5d 29       	or	r21, r13
 c16:	b7 01       	movw	r22, r14
 c18:	ca 01       	movw	r24, r20
 c1a:	1f 91       	pop	r17
 c1c:	0f 91       	pop	r16
 c1e:	ff 90       	pop	r15
 c20:	ef 90       	pop	r14
 c22:	df 90       	pop	r13
 c24:	08 95       	ret

00000c26 <__unpack_f>:
 c26:	fc 01       	movw	r30, r24
 c28:	db 01       	movw	r26, r22
 c2a:	40 81       	ld	r20, Z
 c2c:	51 81       	ldd	r21, Z+1	; 0x01
 c2e:	22 81       	ldd	r18, Z+2	; 0x02
 c30:	62 2f       	mov	r22, r18
 c32:	6f 77       	andi	r22, 0x7F	; 127
 c34:	70 e0       	ldi	r23, 0x00	; 0
 c36:	22 1f       	adc	r18, r18
 c38:	22 27       	eor	r18, r18
 c3a:	22 1f       	adc	r18, r18
 c3c:	93 81       	ldd	r25, Z+3	; 0x03
 c3e:	89 2f       	mov	r24, r25
 c40:	88 0f       	add	r24, r24
 c42:	82 2b       	or	r24, r18
 c44:	28 2f       	mov	r18, r24
 c46:	30 e0       	ldi	r19, 0x00	; 0
 c48:	99 1f       	adc	r25, r25
 c4a:	99 27       	eor	r25, r25
 c4c:	99 1f       	adc	r25, r25
 c4e:	11 96       	adiw	r26, 0x01	; 1
 c50:	9c 93       	st	X, r25
 c52:	11 97       	sbiw	r26, 0x01	; 1
 c54:	21 15       	cp	r18, r1
 c56:	31 05       	cpc	r19, r1
 c58:	a9 f5       	brne	.+106    	; 0xcc4 <__unpack_f+0x9e>
 c5a:	41 15       	cp	r20, r1
 c5c:	51 05       	cpc	r21, r1
 c5e:	61 05       	cpc	r22, r1
 c60:	71 05       	cpc	r23, r1
 c62:	11 f4       	brne	.+4      	; 0xc68 <__unpack_f+0x42>
 c64:	82 e0       	ldi	r24, 0x02	; 2
 c66:	37 c0       	rjmp	.+110    	; 0xcd6 <__unpack_f+0xb0>
 c68:	82 e8       	ldi	r24, 0x82	; 130
 c6a:	9f ef       	ldi	r25, 0xFF	; 255
 c6c:	13 96       	adiw	r26, 0x03	; 3
 c6e:	9c 93       	st	X, r25
 c70:	8e 93       	st	-X, r24
 c72:	12 97       	sbiw	r26, 0x02	; 2
 c74:	9a 01       	movw	r18, r20
 c76:	ab 01       	movw	r20, r22
 c78:	67 e0       	ldi	r22, 0x07	; 7
 c7a:	22 0f       	add	r18, r18
 c7c:	33 1f       	adc	r19, r19
 c7e:	44 1f       	adc	r20, r20
 c80:	55 1f       	adc	r21, r21
 c82:	6a 95       	dec	r22
 c84:	d1 f7       	brne	.-12     	; 0xc7a <__unpack_f+0x54>
 c86:	83 e0       	ldi	r24, 0x03	; 3
 c88:	8c 93       	st	X, r24
 c8a:	0d c0       	rjmp	.+26     	; 0xca6 <__unpack_f+0x80>
 c8c:	22 0f       	add	r18, r18
 c8e:	33 1f       	adc	r19, r19
 c90:	44 1f       	adc	r20, r20
 c92:	55 1f       	adc	r21, r21
 c94:	12 96       	adiw	r26, 0x02	; 2
 c96:	8d 91       	ld	r24, X+
 c98:	9c 91       	ld	r25, X
 c9a:	13 97       	sbiw	r26, 0x03	; 3
 c9c:	01 97       	sbiw	r24, 0x01	; 1
 c9e:	13 96       	adiw	r26, 0x03	; 3
 ca0:	9c 93       	st	X, r25
 ca2:	8e 93       	st	-X, r24
 ca4:	12 97       	sbiw	r26, 0x02	; 2
 ca6:	20 30       	cpi	r18, 0x00	; 0
 ca8:	80 e0       	ldi	r24, 0x00	; 0
 caa:	38 07       	cpc	r19, r24
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	48 07       	cpc	r20, r24
 cb0:	80 e4       	ldi	r24, 0x40	; 64
 cb2:	58 07       	cpc	r21, r24
 cb4:	58 f3       	brcs	.-42     	; 0xc8c <__unpack_f+0x66>
 cb6:	14 96       	adiw	r26, 0x04	; 4
 cb8:	2d 93       	st	X+, r18
 cba:	3d 93       	st	X+, r19
 cbc:	4d 93       	st	X+, r20
 cbe:	5c 93       	st	X, r21
 cc0:	17 97       	sbiw	r26, 0x07	; 7
 cc2:	08 95       	ret
 cc4:	2f 3f       	cpi	r18, 0xFF	; 255
 cc6:	31 05       	cpc	r19, r1
 cc8:	79 f4       	brne	.+30     	; 0xce8 <__unpack_f+0xc2>
 cca:	41 15       	cp	r20, r1
 ccc:	51 05       	cpc	r21, r1
 cce:	61 05       	cpc	r22, r1
 cd0:	71 05       	cpc	r23, r1
 cd2:	19 f4       	brne	.+6      	; 0xcda <__unpack_f+0xb4>
 cd4:	84 e0       	ldi	r24, 0x04	; 4
 cd6:	8c 93       	st	X, r24
 cd8:	08 95       	ret
 cda:	64 ff       	sbrs	r22, 4
 cdc:	03 c0       	rjmp	.+6      	; 0xce4 <__unpack_f+0xbe>
 cde:	81 e0       	ldi	r24, 0x01	; 1
 ce0:	8c 93       	st	X, r24
 ce2:	12 c0       	rjmp	.+36     	; 0xd08 <__unpack_f+0xe2>
 ce4:	1c 92       	st	X, r1
 ce6:	10 c0       	rjmp	.+32     	; 0xd08 <__unpack_f+0xe2>
 ce8:	2f 57       	subi	r18, 0x7F	; 127
 cea:	30 40       	sbci	r19, 0x00	; 0
 cec:	13 96       	adiw	r26, 0x03	; 3
 cee:	3c 93       	st	X, r19
 cf0:	2e 93       	st	-X, r18
 cf2:	12 97       	sbiw	r26, 0x02	; 2
 cf4:	83 e0       	ldi	r24, 0x03	; 3
 cf6:	8c 93       	st	X, r24
 cf8:	87 e0       	ldi	r24, 0x07	; 7
 cfa:	44 0f       	add	r20, r20
 cfc:	55 1f       	adc	r21, r21
 cfe:	66 1f       	adc	r22, r22
 d00:	77 1f       	adc	r23, r23
 d02:	8a 95       	dec	r24
 d04:	d1 f7       	brne	.-12     	; 0xcfa <__unpack_f+0xd4>
 d06:	70 64       	ori	r23, 0x40	; 64
 d08:	14 96       	adiw	r26, 0x04	; 4
 d0a:	4d 93       	st	X+, r20
 d0c:	5d 93       	st	X+, r21
 d0e:	6d 93       	st	X+, r22
 d10:	7c 93       	st	X, r23
 d12:	17 97       	sbiw	r26, 0x07	; 7
 d14:	08 95       	ret

00000d16 <__fpcmp_parts_f>:
 d16:	1f 93       	push	r17
 d18:	dc 01       	movw	r26, r24
 d1a:	fb 01       	movw	r30, r22
 d1c:	9c 91       	ld	r25, X
 d1e:	92 30       	cpi	r25, 0x02	; 2
 d20:	08 f4       	brcc	.+2      	; 0xd24 <__fpcmp_parts_f+0xe>
 d22:	47 c0       	rjmp	.+142    	; 0xdb2 <__fpcmp_parts_f+0x9c>
 d24:	80 81       	ld	r24, Z
 d26:	82 30       	cpi	r24, 0x02	; 2
 d28:	08 f4       	brcc	.+2      	; 0xd2c <__fpcmp_parts_f+0x16>
 d2a:	43 c0       	rjmp	.+134    	; 0xdb2 <__fpcmp_parts_f+0x9c>
 d2c:	94 30       	cpi	r25, 0x04	; 4
 d2e:	51 f4       	brne	.+20     	; 0xd44 <__fpcmp_parts_f+0x2e>
 d30:	11 96       	adiw	r26, 0x01	; 1
 d32:	1c 91       	ld	r17, X
 d34:	84 30       	cpi	r24, 0x04	; 4
 d36:	99 f5       	brne	.+102    	; 0xd9e <__fpcmp_parts_f+0x88>
 d38:	81 81       	ldd	r24, Z+1	; 0x01
 d3a:	68 2f       	mov	r22, r24
 d3c:	70 e0       	ldi	r23, 0x00	; 0
 d3e:	61 1b       	sub	r22, r17
 d40:	71 09       	sbc	r23, r1
 d42:	3f c0       	rjmp	.+126    	; 0xdc2 <__fpcmp_parts_f+0xac>
 d44:	84 30       	cpi	r24, 0x04	; 4
 d46:	21 f0       	breq	.+8      	; 0xd50 <__fpcmp_parts_f+0x3a>
 d48:	92 30       	cpi	r25, 0x02	; 2
 d4a:	31 f4       	brne	.+12     	; 0xd58 <__fpcmp_parts_f+0x42>
 d4c:	82 30       	cpi	r24, 0x02	; 2
 d4e:	b9 f1       	breq	.+110    	; 0xdbe <__fpcmp_parts_f+0xa8>
 d50:	81 81       	ldd	r24, Z+1	; 0x01
 d52:	88 23       	and	r24, r24
 d54:	89 f1       	breq	.+98     	; 0xdb8 <__fpcmp_parts_f+0xa2>
 d56:	2d c0       	rjmp	.+90     	; 0xdb2 <__fpcmp_parts_f+0x9c>
 d58:	11 96       	adiw	r26, 0x01	; 1
 d5a:	1c 91       	ld	r17, X
 d5c:	11 97       	sbiw	r26, 0x01	; 1
 d5e:	82 30       	cpi	r24, 0x02	; 2
 d60:	f1 f0       	breq	.+60     	; 0xd9e <__fpcmp_parts_f+0x88>
 d62:	81 81       	ldd	r24, Z+1	; 0x01
 d64:	18 17       	cp	r17, r24
 d66:	d9 f4       	brne	.+54     	; 0xd9e <__fpcmp_parts_f+0x88>
 d68:	12 96       	adiw	r26, 0x02	; 2
 d6a:	2d 91       	ld	r18, X+
 d6c:	3c 91       	ld	r19, X
 d6e:	13 97       	sbiw	r26, 0x03	; 3
 d70:	82 81       	ldd	r24, Z+2	; 0x02
 d72:	93 81       	ldd	r25, Z+3	; 0x03
 d74:	82 17       	cp	r24, r18
 d76:	93 07       	cpc	r25, r19
 d78:	94 f0       	brlt	.+36     	; 0xd9e <__fpcmp_parts_f+0x88>
 d7a:	28 17       	cp	r18, r24
 d7c:	39 07       	cpc	r19, r25
 d7e:	bc f0       	brlt	.+46     	; 0xdae <__fpcmp_parts_f+0x98>
 d80:	14 96       	adiw	r26, 0x04	; 4
 d82:	8d 91       	ld	r24, X+
 d84:	9d 91       	ld	r25, X+
 d86:	0d 90       	ld	r0, X+
 d88:	bc 91       	ld	r27, X
 d8a:	a0 2d       	mov	r26, r0
 d8c:	24 81       	ldd	r18, Z+4	; 0x04
 d8e:	35 81       	ldd	r19, Z+5	; 0x05
 d90:	46 81       	ldd	r20, Z+6	; 0x06
 d92:	57 81       	ldd	r21, Z+7	; 0x07
 d94:	28 17       	cp	r18, r24
 d96:	39 07       	cpc	r19, r25
 d98:	4a 07       	cpc	r20, r26
 d9a:	5b 07       	cpc	r21, r27
 d9c:	18 f4       	brcc	.+6      	; 0xda4 <__fpcmp_parts_f+0x8e>
 d9e:	11 23       	and	r17, r17
 da0:	41 f0       	breq	.+16     	; 0xdb2 <__fpcmp_parts_f+0x9c>
 da2:	0a c0       	rjmp	.+20     	; 0xdb8 <__fpcmp_parts_f+0xa2>
 da4:	82 17       	cp	r24, r18
 da6:	93 07       	cpc	r25, r19
 da8:	a4 07       	cpc	r26, r20
 daa:	b5 07       	cpc	r27, r21
 dac:	40 f4       	brcc	.+16     	; 0xdbe <__fpcmp_parts_f+0xa8>
 dae:	11 23       	and	r17, r17
 db0:	19 f0       	breq	.+6      	; 0xdb8 <__fpcmp_parts_f+0xa2>
 db2:	61 e0       	ldi	r22, 0x01	; 1
 db4:	70 e0       	ldi	r23, 0x00	; 0
 db6:	05 c0       	rjmp	.+10     	; 0xdc2 <__fpcmp_parts_f+0xac>
 db8:	6f ef       	ldi	r22, 0xFF	; 255
 dba:	7f ef       	ldi	r23, 0xFF	; 255
 dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <__fpcmp_parts_f+0xac>
 dbe:	60 e0       	ldi	r22, 0x00	; 0
 dc0:	70 e0       	ldi	r23, 0x00	; 0
 dc2:	cb 01       	movw	r24, r22
 dc4:	1f 91       	pop	r17
 dc6:	08 95       	ret

00000dc8 <__prologue_saves__>:
 dc8:	2f 92       	push	r2
 dca:	3f 92       	push	r3
 dcc:	4f 92       	push	r4
 dce:	5f 92       	push	r5
 dd0:	6f 92       	push	r6
 dd2:	7f 92       	push	r7
 dd4:	8f 92       	push	r8
 dd6:	9f 92       	push	r9
 dd8:	af 92       	push	r10
 dda:	bf 92       	push	r11
 ddc:	cf 92       	push	r12
 dde:	df 92       	push	r13
 de0:	ef 92       	push	r14
 de2:	ff 92       	push	r15
 de4:	0f 93       	push	r16
 de6:	1f 93       	push	r17
 de8:	cf 93       	push	r28
 dea:	df 93       	push	r29
 dec:	cd b7       	in	r28, 0x3d	; 61
 dee:	de b7       	in	r29, 0x3e	; 62
 df0:	ca 1b       	sub	r28, r26
 df2:	db 0b       	sbc	r29, r27
 df4:	0f b6       	in	r0, 0x3f	; 63
 df6:	f8 94       	cli
 df8:	de bf       	out	0x3e, r29	; 62
 dfa:	0f be       	out	0x3f, r0	; 63
 dfc:	cd bf       	out	0x3d, r28	; 61
 dfe:	09 94       	ijmp

00000e00 <__epilogue_restores__>:
 e00:	2a 88       	ldd	r2, Y+18	; 0x12
 e02:	39 88       	ldd	r3, Y+17	; 0x11
 e04:	48 88       	ldd	r4, Y+16	; 0x10
 e06:	5f 84       	ldd	r5, Y+15	; 0x0f
 e08:	6e 84       	ldd	r6, Y+14	; 0x0e
 e0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 e0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 e0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 e10:	aa 84       	ldd	r10, Y+10	; 0x0a
 e12:	b9 84       	ldd	r11, Y+9	; 0x09
 e14:	c8 84       	ldd	r12, Y+8	; 0x08
 e16:	df 80       	ldd	r13, Y+7	; 0x07
 e18:	ee 80       	ldd	r14, Y+6	; 0x06
 e1a:	fd 80       	ldd	r15, Y+5	; 0x05
 e1c:	0c 81       	ldd	r16, Y+4	; 0x04
 e1e:	1b 81       	ldd	r17, Y+3	; 0x03
 e20:	aa 81       	ldd	r26, Y+2	; 0x02
 e22:	b9 81       	ldd	r27, Y+1	; 0x01
 e24:	ce 0f       	add	r28, r30
 e26:	d1 1d       	adc	r29, r1
 e28:	0f b6       	in	r0, 0x3f	; 63
 e2a:	f8 94       	cli
 e2c:	de bf       	out	0x3e, r29	; 62
 e2e:	0f be       	out	0x3f, r0	; 63
 e30:	cd bf       	out	0x3d, r28	; 61
 e32:	ed 01       	movw	r28, r26
 e34:	08 95       	ret

00000e36 <_exit>:
 e36:	f8 94       	cli

00000e38 <__stop_program>:
 e38:	ff cf       	rjmp	.-2      	; 0xe38 <__stop_program>
